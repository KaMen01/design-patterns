千万不要把抽象与实现局限在extends 和implements关键字的那种形式
应该认为，但凡是更高一层的调用，或者封装，都可以认为是一种抽象与实现
也正是因为这种模式是extends 和implements关键字场景的进一步抽象
所以也被称之为接口Interface模式

设计思路：
    就拿bridge_2的代码而言,有 普通的栈内信息发送、普通的Email信息发送、紧急的栈内信息发送、紧急的Email信息发送
    有两类修饰 栈内发送和email发送， 普通发送和紧急发送
    把这两个接口拆封成两个接口，其中一个接口有另外一个接口的引用,方便日后的扩展
    这就是桥接模式

适配者模式是为了让我们拥有的资源转化为我们需要的资源,需要的资源为目标资源一类

桥接模式是为了让复杂的接口转为单一职责，用组合的方式达到我们需要的复杂接口的需求,需要的资源为组合的对象和接口的实现两类资源